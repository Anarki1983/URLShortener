// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package restctl

import (
	"URLShortener/repo"
	"URLShortener/service"
	"context"
	"github.com/google/wire"
)

// Injectors from redirecturl_wire.go:

func initRedirectURLController(ctx context.Context) (*RedirectURLController, error) {
	redirectURLRepo := repo.NewRedirectURLRepo()
	redirectURLService := service.NewRedirectURLService(redirectURLRepo)
	redirectURLController := NewRedirectURLController(redirectURLService)
	return redirectURLController, nil
}

// Injectors from urlshortener_wire.go:

func initURLShortenerController(ctx context.Context) (*URLShortenerController, error) {
	urlShortenerRepo := repo.NewURLShortenerRepo()
	urlShortenerService := service.NewURLShortenerService(urlShortenerRepo)
	urlShortenerController := NewURLShortenerController(urlShortenerService)
	return urlShortenerController, nil
}

// redirecturl_wire.go:

// provider set of RedirectURL
var RedirectURLSet = wire.NewSet(
	NewRedirectURLController, service.NewRedirectURLService, wire.Bind(new(service.IRedirectURLService), new(*service.RedirectURLService)), repo.NewRedirectURLRepo, wire.Bind(new(repo.IRedirectURLRepo), new(*repo.RedirectURLRepo)),
)

// urlshortener_wire.go:

// provider set of URLShortener
var URLShortenerSet = wire.NewSet(
	NewURLShortenerController, service.NewURLShortenerService, wire.Bind(new(service.IURLShortenerService), new(*service.URLShortenerService)), repo.NewURLShortenerRepo, wire.Bind(new(repo.IURLShortenerRepo), new(*repo.URLShortenerRepo)),
)
